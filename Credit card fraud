{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Importing the Dependencies"],"metadata":{"id":"XylBV5v-uFGj"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score"],"metadata":{"id":"5h_-mfbauNAQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["credit_card_data = pd.read_csv(\"/content/drive/MyDrive/creditcard.csv.zip\")"],"metadata":{"id":"0tdn9NS0uhW4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3LEDfMixkYgT","executionInfo":{"status":"ok","timestamp":1670386114965,"user_tz":-330,"elapsed":4884,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"69495e36-758c-465b-e8ba-b05670a6e761"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["first 5 rows of the dataset"],"metadata":{"id":"Jkvk4xGWu_-6"}},{"cell_type":"code","source":["credit_card_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"sXQK8TjUu4gX","executionInfo":{"status":"ok","timestamp":1670386114966,"user_tz":-330,"elapsed":45,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"326a685b-0d6a-4098-a801-9e11606ee5bb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Time        V1        V2        V3        V4        V5        V6        V7  \\\n","0   0.0 -1.359807 -0.072781  2.536347  1.378155 -0.338321  0.462388  0.239599   \n","1   0.0  1.191857  0.266151  0.166480  0.448154  0.060018 -0.082361 -0.078803   \n","2   1.0 -1.358354 -1.340163  1.773209  0.379780 -0.503198  1.800499  0.791461   \n","3   1.0 -0.966272 -0.185226  1.792993 -0.863291 -0.010309  1.247203  0.237609   \n","4   2.0 -1.158233  0.877737  1.548718  0.403034 -0.407193  0.095921  0.592941   \n","\n","         V8        V9  ...       V21       V22       V23       V24       V25  \\\n","0  0.098698  0.363787  ... -0.018307  0.277838 -0.110474  0.066928  0.128539   \n","1  0.085102 -0.255425  ... -0.225775 -0.638672  0.101288 -0.339846  0.167170   \n","2  0.247676 -1.514654  ...  0.247998  0.771679  0.909412 -0.689281 -0.327642   \n","3  0.377436 -1.387024  ... -0.108300  0.005274 -0.190321 -1.175575  0.647376   \n","4 -0.270533  0.817739  ... -0.009431  0.798278 -0.137458  0.141267 -0.206010   \n","\n","        V26       V27       V28  Amount  Class  \n","0 -0.189115  0.133558 -0.021053  149.62      0  \n","1  0.125895 -0.008983  0.014724    2.69      0  \n","2 -0.139097 -0.055353 -0.059752  378.66      0  \n","3 -0.221929  0.062723  0.061458  123.50      0  \n","4  0.502292  0.219422  0.215153   69.99      0  \n","\n","[5 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-b1f56d25-49a3-4a80-ab02-8ca7ef877284\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>-1.359807</td>\n","      <td>-0.072781</td>\n","      <td>2.536347</td>\n","      <td>1.378155</td>\n","      <td>-0.338321</td>\n","      <td>0.462388</td>\n","      <td>0.239599</td>\n","      <td>0.098698</td>\n","      <td>0.363787</td>\n","      <td>...</td>\n","      <td>-0.018307</td>\n","      <td>0.277838</td>\n","      <td>-0.110474</td>\n","      <td>0.066928</td>\n","      <td>0.128539</td>\n","      <td>-0.189115</td>\n","      <td>0.133558</td>\n","      <td>-0.021053</td>\n","      <td>149.62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.191857</td>\n","      <td>0.266151</td>\n","      <td>0.166480</td>\n","      <td>0.448154</td>\n","      <td>0.060018</td>\n","      <td>-0.082361</td>\n","      <td>-0.078803</td>\n","      <td>0.085102</td>\n","      <td>-0.255425</td>\n","      <td>...</td>\n","      <td>-0.225775</td>\n","      <td>-0.638672</td>\n","      <td>0.101288</td>\n","      <td>-0.339846</td>\n","      <td>0.167170</td>\n","      <td>0.125895</td>\n","      <td>-0.008983</td>\n","      <td>0.014724</td>\n","      <td>2.69</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>-1.358354</td>\n","      <td>-1.340163</td>\n","      <td>1.773209</td>\n","      <td>0.379780</td>\n","      <td>-0.503198</td>\n","      <td>1.800499</td>\n","      <td>0.791461</td>\n","      <td>0.247676</td>\n","      <td>-1.514654</td>\n","      <td>...</td>\n","      <td>0.247998</td>\n","      <td>0.771679</td>\n","      <td>0.909412</td>\n","      <td>-0.689281</td>\n","      <td>-0.327642</td>\n","      <td>-0.139097</td>\n","      <td>-0.055353</td>\n","      <td>-0.059752</td>\n","      <td>378.66</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>-0.966272</td>\n","      <td>-0.185226</td>\n","      <td>1.792993</td>\n","      <td>-0.863291</td>\n","      <td>-0.010309</td>\n","      <td>1.247203</td>\n","      <td>0.237609</td>\n","      <td>0.377436</td>\n","      <td>-1.387024</td>\n","      <td>...</td>\n","      <td>-0.108300</td>\n","      <td>0.005274</td>\n","      <td>-0.190321</td>\n","      <td>-1.175575</td>\n","      <td>0.647376</td>\n","      <td>-0.221929</td>\n","      <td>0.062723</td>\n","      <td>0.061458</td>\n","      <td>123.50</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.0</td>\n","      <td>-1.158233</td>\n","      <td>0.877737</td>\n","      <td>1.548718</td>\n","      <td>0.403034</td>\n","      <td>-0.407193</td>\n","      <td>0.095921</td>\n","      <td>0.592941</td>\n","      <td>-0.270533</td>\n","      <td>0.817739</td>\n","      <td>...</td>\n","      <td>-0.009431</td>\n","      <td>0.798278</td>\n","      <td>-0.137458</td>\n","      <td>0.141267</td>\n","      <td>-0.206010</td>\n","      <td>0.502292</td>\n","      <td>0.219422</td>\n","      <td>0.215153</td>\n","      <td>69.99</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 31 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1f56d25-49a3-4a80-ab02-8ca7ef877284')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b1f56d25-49a3-4a80-ab02-8ca7ef877284 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b1f56d25-49a3-4a80-ab02-8ca7ef877284');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["credit_card_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6RIygHPBvKEC","executionInfo":{"status":"ok","timestamp":1670386114967,"user_tz":-330,"elapsed":43,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"b5fd8491-f319-4692-f988-1c8853a42f57"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 284807 entries, 0 to 284806\n","Data columns (total 31 columns):\n"," #   Column  Non-Null Count   Dtype  \n","---  ------  --------------   -----  \n"," 0   Time    284807 non-null  float64\n"," 1   V1      284807 non-null  float64\n"," 2   V2      284807 non-null  float64\n"," 3   V3      284807 non-null  float64\n"," 4   V4      284807 non-null  float64\n"," 5   V5      284807 non-null  float64\n"," 6   V6      284807 non-null  float64\n"," 7   V7      284807 non-null  float64\n"," 8   V8      284807 non-null  float64\n"," 9   V9      284807 non-null  float64\n"," 10  V10     284807 non-null  float64\n"," 11  V11     284807 non-null  float64\n"," 12  V12     284807 non-null  float64\n"," 13  V13     284807 non-null  float64\n"," 14  V14     284807 non-null  float64\n"," 15  V15     284807 non-null  float64\n"," 16  V16     284807 non-null  float64\n"," 17  V17     284807 non-null  float64\n"," 18  V18     284807 non-null  float64\n"," 19  V19     284807 non-null  float64\n"," 20  V20     284807 non-null  float64\n"," 21  V21     284807 non-null  float64\n"," 22  V22     284807 non-null  float64\n"," 23  V23     284807 non-null  float64\n"," 24  V24     284807 non-null  float64\n"," 25  V25     284807 non-null  float64\n"," 26  V26     284807 non-null  float64\n"," 27  V27     284807 non-null  float64\n"," 28  V28     284807 non-null  float64\n"," 29  Amount  284807 non-null  float64\n"," 30  Class   284807 non-null  int64  \n","dtypes: float64(30), int64(1)\n","memory usage: 67.4 MB\n"]}]},{"cell_type":"markdown","source":["checking the number of missing values in each column"],"metadata":{"id":"Yh7qXDkzvZCT"}},{"cell_type":"code","source":["credit_card_data.isnull()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"ztf1DtQmvTX5","executionInfo":{"status":"ok","timestamp":1670386114968,"user_tz":-330,"elapsed":35,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"ddefa31c-0864-4e2e-8fa6-a57fe082e6ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Time     V1     V2     V3     V4     V5     V6     V7     V8     V9  \\\n","0       False  False  False  False  False  False  False  False  False  False   \n","1       False  False  False  False  False  False  False  False  False  False   \n","2       False  False  False  False  False  False  False  False  False  False   \n","3       False  False  False  False  False  False  False  False  False  False   \n","4       False  False  False  False  False  False  False  False  False  False   \n","...       ...    ...    ...    ...    ...    ...    ...    ...    ...    ...   \n","284802  False  False  False  False  False  False  False  False  False  False   \n","284803  False  False  False  False  False  False  False  False  False  False   \n","284804  False  False  False  False  False  False  False  False  False  False   \n","284805  False  False  False  False  False  False  False  False  False  False   \n","284806  False  False  False  False  False  False  False  False  False  False   \n","\n","        ...    V21    V22    V23    V24    V25    V26    V27    V28  Amount  \\\n","0       ...  False  False  False  False  False  False  False  False   False   \n","1       ...  False  False  False  False  False  False  False  False   False   \n","2       ...  False  False  False  False  False  False  False  False   False   \n","3       ...  False  False  False  False  False  False  False  False   False   \n","4       ...  False  False  False  False  False  False  False  False   False   \n","...     ...    ...    ...    ...    ...    ...    ...    ...    ...     ...   \n","284802  ...  False  False  False  False  False  False  False  False   False   \n","284803  ...  False  False  False  False  False  False  False  False   False   \n","284804  ...  False  False  False  False  False  False  False  False   False   \n","284805  ...  False  False  False  False  False  False  False  False   False   \n","284806  ...  False  False  False  False  False  False  False  False   False   \n","\n","        Class  \n","0       False  \n","1       False  \n","2       False  \n","3       False  \n","4       False  \n","...       ...  \n","284802  False  \n","284803  False  \n","284804  False  \n","284805  False  \n","284806  False  \n","\n","[284807 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-0dc8d6f3-eaed-44d4-a515-bfdf01d2a32f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>284802</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>284803</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>284804</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>284805</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>284806</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>284807 rows Ã— 31 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0dc8d6f3-eaed-44d4-a515-bfdf01d2a32f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0dc8d6f3-eaed-44d4-a515-bfdf01d2a32f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0dc8d6f3-eaed-44d4-a515-bfdf01d2a32f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":90}]},{"cell_type":"markdown","source":["distribution of legit transactions & fraudulent transactions"],"metadata":{"id":"piSgnyAcvkeq"}},{"cell_type":"code","source":["credit_card_data['Class'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VKQy8AOSvd99","executionInfo":{"status":"ok","timestamp":1670386114969,"user_tz":-330,"elapsed":34,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"0054c526-2a65-481c-fae1-7c98c66343e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    284315\n","1       492\n","Name: Class, dtype: int64"]},"metadata":{},"execution_count":91}]},{"cell_type":"markdown","source":["separating the data for analysis"],"metadata":{"id":"w78ikupYvsKR"}},{"cell_type":"markdown","source":["Fraud cases\n","valid Transaction"],"metadata":{"id":"g4L_nKncKy3G"}},{"cell_type":"code","source":["# Determine number of fraud cases in dataset\n","fraud = credit_card_data[credit_card_data['Class'] == 1]\n","valid = credit_card_data[credit_card_data['Class'] == 0]\n","outlierFraction = len(fraud)/float(len(valid))\n","print(outlierFraction)\n","print('Fraud Cases: {}'.format(len(credit_card_data[credit_card_data['Class'] == 1])))\n","print('Valid Transactions: {}'.format(len(credit_card_data[credit_card_data['Class'] == 0])))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k2EvAVfTKIhT","executionInfo":{"status":"ok","timestamp":1670386114969,"user_tz":-330,"elapsed":26,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"a498b87f-0723-4d1f-b053-725a82272c3b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.0017304750013189597\n","Fraud Cases: 492\n","Valid Transactions: 284315\n"]}]},{"cell_type":"code","source":["legit = credit_card_data[credit_card_data.Class == 0]\n","fraud = credit_card_data[credit_card_data.Class == 1]"],"metadata":{"id":"pRHZs0ZlvoSU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(legit.shape)\n","print(fraud.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UOSyx1sovvo5","executionInfo":{"status":"ok","timestamp":1670386115441,"user_tz":-330,"elapsed":19,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"55d9586e-39df-4793-b1ca-b8335d21a09c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(284315, 31)\n","(492, 31)\n"]}]},{"cell_type":"markdown","source":["statistical measures of the data"],"metadata":{"id":"xQOKmhSBv3ir"}},{"cell_type":"code","source":["legit.Amount.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kNfj0wf3vzr1","executionInfo":{"status":"ok","timestamp":1670386115442,"user_tz":-330,"elapsed":14,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"fbc47a4a-0e26-4972-fddc-5f79dd5662fd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    284315.000000\n","mean         88.291022\n","std         250.105092\n","min           0.000000\n","25%           5.650000\n","50%          22.000000\n","75%          77.050000\n","max       25691.160000\n","Name: Amount, dtype: float64"]},"metadata":{},"execution_count":95}]},{"cell_type":"markdown","source":["compare the values for both transactions"],"metadata":{"id":"Mgrv8xTHwOAy"}},{"cell_type":"code","source":["credit_card_data.groupby('Class').mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"ORED8ljhv7MG","executionInfo":{"status":"ok","timestamp":1670386116942,"user_tz":-330,"elapsed":1507,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"d4a5876b-0549-486c-b59c-299dfa1fff0d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Time        V1        V2        V3        V4        V5  \\\n","Class                                                                   \n","0      94838.202258  0.008258 -0.006271  0.012171 -0.007860  0.005453   \n","1      80746.806911 -4.771948  3.623778 -7.033281  4.542029 -3.151225   \n","\n","             V6        V7        V8        V9  ...       V20       V21  \\\n","Class                                          ...                       \n","0      0.002419  0.009637 -0.000987  0.004467  ... -0.000644 -0.001235   \n","1     -1.397737 -5.568731  0.570636 -2.581123  ...  0.372319  0.713588   \n","\n","            V22       V23       V24       V25       V26       V27       V28  \\\n","Class                                                                         \n","0     -0.000024  0.000070  0.000182 -0.000072 -0.000089 -0.000295 -0.000131   \n","1      0.014049 -0.040308 -0.105130  0.041449  0.051648  0.170575  0.075667   \n","\n","           Amount  \n","Class              \n","0       88.291022  \n","1      122.211321  \n","\n","[2 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-027e50bc-81eb-44c2-91a5-16c2da860aab\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V20</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","    </tr>\n","    <tr>\n","      <th>Class</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>94838.202258</td>\n","      <td>0.008258</td>\n","      <td>-0.006271</td>\n","      <td>0.012171</td>\n","      <td>-0.007860</td>\n","      <td>0.005453</td>\n","      <td>0.002419</td>\n","      <td>0.009637</td>\n","      <td>-0.000987</td>\n","      <td>0.004467</td>\n","      <td>...</td>\n","      <td>-0.000644</td>\n","      <td>-0.001235</td>\n","      <td>-0.000024</td>\n","      <td>0.000070</td>\n","      <td>0.000182</td>\n","      <td>-0.000072</td>\n","      <td>-0.000089</td>\n","      <td>-0.000295</td>\n","      <td>-0.000131</td>\n","      <td>88.291022</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>80746.806911</td>\n","      <td>-4.771948</td>\n","      <td>3.623778</td>\n","      <td>-7.033281</td>\n","      <td>4.542029</td>\n","      <td>-3.151225</td>\n","      <td>-1.397737</td>\n","      <td>-5.568731</td>\n","      <td>0.570636</td>\n","      <td>-2.581123</td>\n","      <td>...</td>\n","      <td>0.372319</td>\n","      <td>0.713588</td>\n","      <td>0.014049</td>\n","      <td>-0.040308</td>\n","      <td>-0.105130</td>\n","      <td>0.041449</td>\n","      <td>0.051648</td>\n","      <td>0.170575</td>\n","      <td>0.075667</td>\n","      <td>122.211321</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2 rows Ã— 30 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-027e50bc-81eb-44c2-91a5-16c2da860aab')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-027e50bc-81eb-44c2-91a5-16c2da860aab button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-027e50bc-81eb-44c2-91a5-16c2da860aab');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":96}]},{"cell_type":"markdown","source":["Under-Sampling\n","\n","Build a sample dataset containing similar distribution of normal transactions and Fraudulent Transactions\n","\n","Number of Fraudulent Transactions --> 492"],"metadata":{"id":"3wzPiVwrxDbl"}},{"cell_type":"code","source":["legit_sample = legit.sample(n=492)"],"metadata":{"id":"Xwgn7ix1w-Pf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Concatenating two DataFrames"],"metadata":{"id":"W4aHnyiexLt5"}},{"cell_type":"code","source":["new_dataset = pd.concat([legit_sample, fraud], axis=0)"],"metadata":{"id":"irEw9ih0xKFi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"exRUBK67xVvL","executionInfo":{"status":"ok","timestamp":1670386116946,"user_tz":-330,"elapsed":17,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"5d1bf190-6616-4ef0-ceff-5fd1cabaa2c7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Time        V1        V2        V3        V4        V5        V6  \\\n","223784  143522.0 -0.153121  1.093714 -0.633573 -0.790079  1.216534 -0.273466   \n","31577    36420.0 -1.055223  1.418550  2.678085  2.868270 -0.786207  0.518675   \n","220634  142251.0 -0.691135  0.890081 -0.230734 -0.494018  0.396162 -1.139473   \n","1636      1266.0 -0.834421  1.594103  1.093687  1.430339 -0.410451 -0.470398   \n","39339    39799.0  1.060841  0.170962  0.335572  1.236511 -0.110363 -0.354316   \n","\n","              V7        V8        V9  ...       V21       V22       V23  \\\n","223784  0.815858  0.081233 -0.131485  ... -0.335383 -0.766329  0.051369   \n","31577  -0.169004  0.408888 -0.105395  ... -0.149539 -0.075045 -0.171719   \n","220634  0.872338  0.189297 -0.061377  ... -0.049749 -0.138564  0.122511   \n","1636    0.861498  0.107881 -1.311986  ...  0.097377  0.218538 -0.260168   \n","39339   0.219417 -0.142249 -0.196143  ...  0.151889  0.424005 -0.152635   \n","\n","             V24       V25       V26       V27       V28  Amount  Class  \n","223784  0.122629 -0.355607  0.126277  0.331056  0.136680    3.59      0  \n","31577   0.356192  0.113908  0.272508  0.577639  0.285236    8.97      0  \n","220634 -0.127978 -0.580885 -0.622728  0.322298  0.185636   43.10      0  \n","1636    0.416167  0.475159 -0.084941 -0.137001  0.000248   73.66      0  \n","39339   0.124916  0.614348 -0.262357  0.029291  0.032926   72.00      0  \n","\n","[5 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-b58353d8-0047-4e6e-9d7c-4f9c83e100d5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>223784</th>\n","      <td>143522.0</td>\n","      <td>-0.153121</td>\n","      <td>1.093714</td>\n","      <td>-0.633573</td>\n","      <td>-0.790079</td>\n","      <td>1.216534</td>\n","      <td>-0.273466</td>\n","      <td>0.815858</td>\n","      <td>0.081233</td>\n","      <td>-0.131485</td>\n","      <td>...</td>\n","      <td>-0.335383</td>\n","      <td>-0.766329</td>\n","      <td>0.051369</td>\n","      <td>0.122629</td>\n","      <td>-0.355607</td>\n","      <td>0.126277</td>\n","      <td>0.331056</td>\n","      <td>0.136680</td>\n","      <td>3.59</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>31577</th>\n","      <td>36420.0</td>\n","      <td>-1.055223</td>\n","      <td>1.418550</td>\n","      <td>2.678085</td>\n","      <td>2.868270</td>\n","      <td>-0.786207</td>\n","      <td>0.518675</td>\n","      <td>-0.169004</td>\n","      <td>0.408888</td>\n","      <td>-0.105395</td>\n","      <td>...</td>\n","      <td>-0.149539</td>\n","      <td>-0.075045</td>\n","      <td>-0.171719</td>\n","      <td>0.356192</td>\n","      <td>0.113908</td>\n","      <td>0.272508</td>\n","      <td>0.577639</td>\n","      <td>0.285236</td>\n","      <td>8.97</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>220634</th>\n","      <td>142251.0</td>\n","      <td>-0.691135</td>\n","      <td>0.890081</td>\n","      <td>-0.230734</td>\n","      <td>-0.494018</td>\n","      <td>0.396162</td>\n","      <td>-1.139473</td>\n","      <td>0.872338</td>\n","      <td>0.189297</td>\n","      <td>-0.061377</td>\n","      <td>...</td>\n","      <td>-0.049749</td>\n","      <td>-0.138564</td>\n","      <td>0.122511</td>\n","      <td>-0.127978</td>\n","      <td>-0.580885</td>\n","      <td>-0.622728</td>\n","      <td>0.322298</td>\n","      <td>0.185636</td>\n","      <td>43.10</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1636</th>\n","      <td>1266.0</td>\n","      <td>-0.834421</td>\n","      <td>1.594103</td>\n","      <td>1.093687</td>\n","      <td>1.430339</td>\n","      <td>-0.410451</td>\n","      <td>-0.470398</td>\n","      <td>0.861498</td>\n","      <td>0.107881</td>\n","      <td>-1.311986</td>\n","      <td>...</td>\n","      <td>0.097377</td>\n","      <td>0.218538</td>\n","      <td>-0.260168</td>\n","      <td>0.416167</td>\n","      <td>0.475159</td>\n","      <td>-0.084941</td>\n","      <td>-0.137001</td>\n","      <td>0.000248</td>\n","      <td>73.66</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>39339</th>\n","      <td>39799.0</td>\n","      <td>1.060841</td>\n","      <td>0.170962</td>\n","      <td>0.335572</td>\n","      <td>1.236511</td>\n","      <td>-0.110363</td>\n","      <td>-0.354316</td>\n","      <td>0.219417</td>\n","      <td>-0.142249</td>\n","      <td>-0.196143</td>\n","      <td>...</td>\n","      <td>0.151889</td>\n","      <td>0.424005</td>\n","      <td>-0.152635</td>\n","      <td>0.124916</td>\n","      <td>0.614348</td>\n","      <td>-0.262357</td>\n","      <td>0.029291</td>\n","      <td>0.032926</td>\n","      <td>72.00</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 31 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b58353d8-0047-4e6e-9d7c-4f9c83e100d5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b58353d8-0047-4e6e-9d7c-4f9c83e100d5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b58353d8-0047-4e6e-9d7c-4f9c83e100d5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["new_dataset.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"q6glwdeyxYaV","executionInfo":{"status":"ok","timestamp":1670386117518,"user_tz":-330,"elapsed":588,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"c06246c6-a13c-4ee5-ae09-0e2589ae5dba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Time        V1        V2        V3        V4        V5        V6  \\\n","279863  169142.0 -1.927883  1.125653 -4.518331  1.749293 -1.566487 -2.010494   \n","280143  169347.0  1.378559  1.289381 -5.004247  1.411850  0.442581 -1.326536   \n","280149  169351.0 -0.676143  1.126366 -2.213700  0.468308 -1.120541 -0.003346   \n","281144  169966.0 -3.113832  0.585864 -5.399730  1.817092 -0.840618 -2.943548   \n","281674  170348.0  1.991976  0.158476 -2.583441  0.408670  1.151147 -0.096695   \n","\n","              V7        V8        V9  ...       V21       V22       V23  \\\n","279863 -0.882850  0.697211 -2.064945  ...  0.778584 -0.319189  0.639419   \n","280143 -1.413170  0.248525 -1.127396  ...  0.370612  0.028234 -0.145640   \n","280149 -2.234739  1.210158 -0.652250  ...  0.751826  0.834108  0.190944   \n","281144 -2.208002  1.058733 -1.632333  ...  0.583276 -0.269209 -0.456108   \n","281674  0.223050 -0.068384  0.577829  ... -0.164350 -0.295135 -0.072173   \n","\n","             V24       V25       V26       V27       V28  Amount  Class  \n","279863 -0.294885  0.537503  0.788395  0.292680  0.147968  390.00      1  \n","280143 -0.081049  0.521875  0.739467  0.389152  0.186637    0.76      1  \n","280149  0.032070 -0.739695  0.471111  0.385107  0.194361   77.89      1  \n","281144 -0.183659 -0.328168  0.606116  0.884876 -0.253700  245.00      1  \n","281674 -0.450261  0.313267 -0.289617  0.002988 -0.015309   42.53      1  \n","\n","[5 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-7721cb09-81e5-4b85-b358-dcb37bc0035e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>279863</th>\n","      <td>169142.0</td>\n","      <td>-1.927883</td>\n","      <td>1.125653</td>\n","      <td>-4.518331</td>\n","      <td>1.749293</td>\n","      <td>-1.566487</td>\n","      <td>-2.010494</td>\n","      <td>-0.882850</td>\n","      <td>0.697211</td>\n","      <td>-2.064945</td>\n","      <td>...</td>\n","      <td>0.778584</td>\n","      <td>-0.319189</td>\n","      <td>0.639419</td>\n","      <td>-0.294885</td>\n","      <td>0.537503</td>\n","      <td>0.788395</td>\n","      <td>0.292680</td>\n","      <td>0.147968</td>\n","      <td>390.00</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>280143</th>\n","      <td>169347.0</td>\n","      <td>1.378559</td>\n","      <td>1.289381</td>\n","      <td>-5.004247</td>\n","      <td>1.411850</td>\n","      <td>0.442581</td>\n","      <td>-1.326536</td>\n","      <td>-1.413170</td>\n","      <td>0.248525</td>\n","      <td>-1.127396</td>\n","      <td>...</td>\n","      <td>0.370612</td>\n","      <td>0.028234</td>\n","      <td>-0.145640</td>\n","      <td>-0.081049</td>\n","      <td>0.521875</td>\n","      <td>0.739467</td>\n","      <td>0.389152</td>\n","      <td>0.186637</td>\n","      <td>0.76</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>280149</th>\n","      <td>169351.0</td>\n","      <td>-0.676143</td>\n","      <td>1.126366</td>\n","      <td>-2.213700</td>\n","      <td>0.468308</td>\n","      <td>-1.120541</td>\n","      <td>-0.003346</td>\n","      <td>-2.234739</td>\n","      <td>1.210158</td>\n","      <td>-0.652250</td>\n","      <td>...</td>\n","      <td>0.751826</td>\n","      <td>0.834108</td>\n","      <td>0.190944</td>\n","      <td>0.032070</td>\n","      <td>-0.739695</td>\n","      <td>0.471111</td>\n","      <td>0.385107</td>\n","      <td>0.194361</td>\n","      <td>77.89</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>281144</th>\n","      <td>169966.0</td>\n","      <td>-3.113832</td>\n","      <td>0.585864</td>\n","      <td>-5.399730</td>\n","      <td>1.817092</td>\n","      <td>-0.840618</td>\n","      <td>-2.943548</td>\n","      <td>-2.208002</td>\n","      <td>1.058733</td>\n","      <td>-1.632333</td>\n","      <td>...</td>\n","      <td>0.583276</td>\n","      <td>-0.269209</td>\n","      <td>-0.456108</td>\n","      <td>-0.183659</td>\n","      <td>-0.328168</td>\n","      <td>0.606116</td>\n","      <td>0.884876</td>\n","      <td>-0.253700</td>\n","      <td>245.00</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>281674</th>\n","      <td>170348.0</td>\n","      <td>1.991976</td>\n","      <td>0.158476</td>\n","      <td>-2.583441</td>\n","      <td>0.408670</td>\n","      <td>1.151147</td>\n","      <td>-0.096695</td>\n","      <td>0.223050</td>\n","      <td>-0.068384</td>\n","      <td>0.577829</td>\n","      <td>...</td>\n","      <td>-0.164350</td>\n","      <td>-0.295135</td>\n","      <td>-0.072173</td>\n","      <td>-0.450261</td>\n","      <td>0.313267</td>\n","      <td>-0.289617</td>\n","      <td>0.002988</td>\n","      <td>-0.015309</td>\n","      <td>42.53</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 31 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7721cb09-81e5-4b85-b358-dcb37bc0035e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7721cb09-81e5-4b85-b358-dcb37bc0035e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7721cb09-81e5-4b85-b358-dcb37bc0035e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["new_dataset['Class'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M2rHPyh0xcxB","executionInfo":{"status":"ok","timestamp":1670386117520,"user_tz":-330,"elapsed":26,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"41d85673-1619-4b7e-d2f8-e557c81e1c75"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    492\n","1    492\n","Name: Class, dtype: int64"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["new_dataset.groupby('Class').mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"4tnl6rMmxhHH","executionInfo":{"status":"ok","timestamp":1670386117521,"user_tz":-330,"elapsed":22,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"2b89a1aa-b7a4-4b70-802f-34f845f624ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Time        V1        V2        V3        V4        V5  \\\n","Class                                                                   \n","0      96878.404472  0.057114 -0.004774 -0.093762 -0.083412 -0.023490   \n","1      80746.806911 -4.771948  3.623778 -7.033281  4.542029 -3.151225   \n","\n","             V6        V7        V8        V9  ...       V20       V21  \\\n","Class                                          ...                       \n","0      0.063457  0.007118 -0.020199 -0.002447  ... -0.017697  0.003908   \n","1     -1.397737 -5.568731  0.570636 -2.581123  ...  0.372319  0.713588   \n","\n","            V22       V23       V24       V25       V26       V27       V28  \\\n","Class                                                                         \n","0     -0.036363  0.016104  0.049349  0.017600 -0.002618  0.005869  0.003144   \n","1      0.014049 -0.040308 -0.105130  0.041449  0.051648  0.170575  0.075667   \n","\n","           Amount  \n","Class              \n","0       91.957500  \n","1      122.211321  \n","\n","[2 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-0ac1fea4-d6ab-4e8c-a5fa-6e0587defb06\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V20</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","    </tr>\n","    <tr>\n","      <th>Class</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>96878.404472</td>\n","      <td>0.057114</td>\n","      <td>-0.004774</td>\n","      <td>-0.093762</td>\n","      <td>-0.083412</td>\n","      <td>-0.023490</td>\n","      <td>0.063457</td>\n","      <td>0.007118</td>\n","      <td>-0.020199</td>\n","      <td>-0.002447</td>\n","      <td>...</td>\n","      <td>-0.017697</td>\n","      <td>0.003908</td>\n","      <td>-0.036363</td>\n","      <td>0.016104</td>\n","      <td>0.049349</td>\n","      <td>0.017600</td>\n","      <td>-0.002618</td>\n","      <td>0.005869</td>\n","      <td>0.003144</td>\n","      <td>91.957500</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>80746.806911</td>\n","      <td>-4.771948</td>\n","      <td>3.623778</td>\n","      <td>-7.033281</td>\n","      <td>4.542029</td>\n","      <td>-3.151225</td>\n","      <td>-1.397737</td>\n","      <td>-5.568731</td>\n","      <td>0.570636</td>\n","      <td>-2.581123</td>\n","      <td>...</td>\n","      <td>0.372319</td>\n","      <td>0.713588</td>\n","      <td>0.014049</td>\n","      <td>-0.040308</td>\n","      <td>-0.105130</td>\n","      <td>0.041449</td>\n","      <td>0.051648</td>\n","      <td>0.170575</td>\n","      <td>0.075667</td>\n","      <td>122.211321</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2 rows Ã— 30 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ac1fea4-d6ab-4e8c-a5fa-6e0587defb06')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0ac1fea4-d6ab-4e8c-a5fa-6e0587defb06 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0ac1fea4-d6ab-4e8c-a5fa-6e0587defb06');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":102}]},{"cell_type":"markdown","source":["Splitting the data into Features & Targets"],"metadata":{"id":"UTyYe7ZGxrJW"}},{"cell_type":"code","source":["X = new_dataset.drop(columns='Class', axis=1)\n","Y = new_dataset['Class']"],"metadata":{"id":"sG6AEKb0xkg-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cKJjxNeixwIL","executionInfo":{"status":"ok","timestamp":1670386117522,"user_tz":-330,"elapsed":21,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"93b845d9-707b-42da-dbe6-730c7d411f27"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["            Time        V1        V2        V3        V4        V5        V6  \\\n","223784  143522.0 -0.153121  1.093714 -0.633573 -0.790079  1.216534 -0.273466   \n","31577    36420.0 -1.055223  1.418550  2.678085  2.868270 -0.786207  0.518675   \n","220634  142251.0 -0.691135  0.890081 -0.230734 -0.494018  0.396162 -1.139473   \n","1636      1266.0 -0.834421  1.594103  1.093687  1.430339 -0.410451 -0.470398   \n","39339    39799.0  1.060841  0.170962  0.335572  1.236511 -0.110363 -0.354316   \n","...          ...       ...       ...       ...       ...       ...       ...   \n","279863  169142.0 -1.927883  1.125653 -4.518331  1.749293 -1.566487 -2.010494   \n","280143  169347.0  1.378559  1.289381 -5.004247  1.411850  0.442581 -1.326536   \n","280149  169351.0 -0.676143  1.126366 -2.213700  0.468308 -1.120541 -0.003346   \n","281144  169966.0 -3.113832  0.585864 -5.399730  1.817092 -0.840618 -2.943548   \n","281674  170348.0  1.991976  0.158476 -2.583441  0.408670  1.151147 -0.096695   \n","\n","              V7        V8        V9  ...       V20       V21       V22  \\\n","223784  0.815858  0.081233 -0.131485  ...  0.181028 -0.335383 -0.766329   \n","31577  -0.169004  0.408888 -0.105395  ...  0.449911 -0.149539 -0.075045   \n","220634  0.872338  0.189297 -0.061377  ... -0.010765 -0.049749 -0.138564   \n","1636    0.861498  0.107881 -1.311986  ...  0.093021  0.097377  0.218538   \n","39339   0.219417 -0.142249 -0.196143  ...  0.036985  0.151889  0.424005   \n","...          ...       ...       ...  ...       ...       ...       ...   \n","279863 -0.882850  0.697211 -2.064945  ...  1.252967  0.778584 -0.319189   \n","280143 -1.413170  0.248525 -1.127396  ...  0.226138  0.370612  0.028234   \n","280149 -2.234739  1.210158 -0.652250  ...  0.247968  0.751826  0.834108   \n","281144 -2.208002  1.058733 -1.632333  ...  0.306271  0.583276 -0.269209   \n","281674  0.223050 -0.068384  0.577829  ... -0.017652 -0.164350 -0.295135   \n","\n","             V23       V24       V25       V26       V27       V28  Amount  \n","223784  0.051369  0.122629 -0.355607  0.126277  0.331056  0.136680    3.59  \n","31577  -0.171719  0.356192  0.113908  0.272508  0.577639  0.285236    8.97  \n","220634  0.122511 -0.127978 -0.580885 -0.622728  0.322298  0.185636   43.10  \n","1636   -0.260168  0.416167  0.475159 -0.084941 -0.137001  0.000248   73.66  \n","39339  -0.152635  0.124916  0.614348 -0.262357  0.029291  0.032926   72.00  \n","...          ...       ...       ...       ...       ...       ...     ...  \n","279863  0.639419 -0.294885  0.537503  0.788395  0.292680  0.147968  390.00  \n","280143 -0.145640 -0.081049  0.521875  0.739467  0.389152  0.186637    0.76  \n","280149  0.190944  0.032070 -0.739695  0.471111  0.385107  0.194361   77.89  \n","281144 -0.456108 -0.183659 -0.328168  0.606116  0.884876 -0.253700  245.00  \n","281674 -0.072173 -0.450261  0.313267 -0.289617  0.002988 -0.015309   42.53  \n","\n","[984 rows x 30 columns]\n"]}]},{"cell_type":"code","source":["print(Y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ldjBTLyAI7BX","executionInfo":{"status":"ok","timestamp":1670386117523,"user_tz":-330,"elapsed":18,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"4ec12726-ccd2-4935-e09b-ad235ab07e2e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["223784    0\n","31577     0\n","220634    0\n","1636      0\n","39339     0\n","         ..\n","279863    1\n","280143    1\n","280149    1\n","281144    1\n","281674    1\n","Name: Class, Length: 984, dtype: int64\n"]}]},{"cell_type":"code","source":["X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)"],"metadata":{"id":"E9206zeHJGhU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X.shape, X_train.shape, X_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"whppRDW0JNA3","executionInfo":{"status":"ok","timestamp":1670386119009,"user_tz":-330,"elapsed":46,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"5890cffb-1d42-45f5-a154-6f2f0bdee2ae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(984, 30) (787, 30) (197, 30)\n"]}]},{"cell_type":"markdown","source":["Model Training\n","\n","Logistic Regression"],"metadata":{"id":"6RficzJfJWjX"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","lr = LogisticRegression()\n","lr.fit(X_train,Y_train)"],"metadata":{"id":"XXXX7M_tJSbf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670386119009,"user_tz":-330,"elapsed":39,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"2ad0175d-2c0c-474d-f86b-bcd91ef481b2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["Y_pred=lr.predict(X_test)"],"metadata":{"id":"UAOHvXTCSDoi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","from sklearn.metrics import precision_score\n","from sklearn.metrics import recall_score\n","from sklearn.metrics import f1_score\n","print('Accuracy : {}'.format(accuracy_score(Y_test,Y_pred)))\n","print('Precision : {}'.format(precision_score(Y_test,Y_pred)))\n","print('Recall : {}'.format(recall_score(Y_test,Y_pred)))\n","print('F1_Score : {}'.format(f1_score(Y_test,Y_pred)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t4DfrUqpSLyO","executionInfo":{"status":"ok","timestamp":1670386119011,"user_tz":-330,"elapsed":35,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"24ecb9c6-dd88-4afb-aa2c-e0a4cdb9c2ab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy : 0.9238578680203046\n","Precision : 0.9662921348314607\n","Recall : 0.8775510204081632\n","F1_Score : 0.9197860962566844\n"]}]},{"cell_type":"markdown","source":["Model Evaluation"],"metadata":{"id":"wbWaWJYKKsZ0"}},{"cell_type":"markdown","source":["Accuracy Score"],"metadata":{"id":"tC6OWQV0K2WZ"}},{"cell_type":"code","source":["# accuracy on training data\n","X_train_prediction = lr.predict(X_train)\n","training_data_accuracy = accuracy_score(X_train_prediction, Y_train)"],"metadata":{"id":"77pjK5u_JqMb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('Accuracy on Training data : ', training_data_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p4P6ugIYLDU9","executionInfo":{"status":"ok","timestamp":1670386119013,"user_tz":-330,"elapsed":29,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"f0e93727-2704-493a-e419-9f0d44f604a1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy on Training data :  0.9440914866581956\n"]}]},{"cell_type":"markdown","source":["accuracy on test data"],"metadata":{"id":"ljfrLosVLQjb"}},{"cell_type":"code","source":["X_test_prediction = lr.predict(X_test)\n","test_data_accuracy = accuracy_score(X_test_prediction, Y_test)"],"metadata":{"id":"5J-uTXBdLLOb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('Accuracy score on Test Data : ', test_data_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sYeAeZurLWIm","executionInfo":{"status":"ok","timestamp":1670386119014,"user_tz":-330,"elapsed":24,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"e11c7b2a-2246-4143-af6d-03912a82f1e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score on Test Data :  0.9238578680203046\n"]}]},{"cell_type":"code","source":["credit_card_data=credit_card_data[[\"V1\",\"V3\",\"V5\",\"V7\",\"V9\",\"V11\",\"V13\",\"V17\",\"V19\",\"V21\"]]\n","x=credit_card_data.iloc[:,:6].values\n","y=credit_card_data.iloc[:,6].values"],"metadata":{"id":"xBfBtOjg3fFD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["credit_card_data.hist(bins=30, figsize=(30, 30))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Fm3nRt-a8E5n","executionInfo":{"status":"ok","timestamp":1670386128617,"user_tz":-330,"elapsed":9621,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"6fc45efc-155a-47af-8cba-9be7fb08bccb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f2f787097c0>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f2f78752eb0>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f2f786c6310>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f2f786ef700>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f2f7869aaf0>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f2f78645e20>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f2f78645f10>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f2f785fb3a0>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f2f785d2af0>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f2f78582ee0>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f2f78541220>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f2f7855f7c0>]],\n","      dtype=object)"]},"metadata":{},"execution_count":116},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x2160 with 12 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2, random_state=0)"],"metadata":{"id":"uhgm4At02Tvi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler,MinMaxScaler,normalize"],"metadata":{"id":"Bfem2lwJ4syo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sc=StandardScaler()\n","credit_card_data=credit_card_data[[\"V5\",\"V9\",\"V13\",\"V17\",\"V21\"]]\n","sc.fit(credit_card_data)\n","scredit_card_data=sc.transform(credit_card_data)"],"metadata":{"id":"B7uzy_5W-dMI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["scredit_card_data=pd.DataFrame(scredit_card_data)\n","scredit_card_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"w-FqUlUlACvQ","executionInfo":{"status":"ok","timestamp":1670386130073,"user_tz":-330,"elapsed":49,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"466de710-2a21-4a9e-9200-754896bb3a65"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               0         1         2         3         4\n","0      -0.245117  0.331128 -0.996099  0.244863 -0.024923\n","1       0.043483 -0.232494  0.491418 -0.135170 -0.307377\n","2      -0.364572 -1.378675  0.720700  1.306868  0.337632\n","3      -0.007469 -1.262503  0.510169 -0.805445 -0.147443\n","4      -0.295015  0.744326  1.352244 -0.279081 -0.012839\n","...          ...       ...       ...       ...       ...\n","284802 -3.886611  1.742559 -0.692530  2.344999  0.290602\n","284803  0.629040  0.532299  1.220526 -0.030251  0.291625\n","284804  1.905833  0.393630 -0.184571  0.369114  0.315913\n","284805 -0.273836  0.356887 -1.047032  0.600385  0.361112\n","284806 -0.009089  0.442532 -0.188986 -0.777521  0.355411\n","\n","[284807 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-423c9607-b7fb-423f-afc0-943709230473\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-0.245117</td>\n","      <td>0.331128</td>\n","      <td>-0.996099</td>\n","      <td>0.244863</td>\n","      <td>-0.024923</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.043483</td>\n","      <td>-0.232494</td>\n","      <td>0.491418</td>\n","      <td>-0.135170</td>\n","      <td>-0.307377</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.364572</td>\n","      <td>-1.378675</td>\n","      <td>0.720700</td>\n","      <td>1.306868</td>\n","      <td>0.337632</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-0.007469</td>\n","      <td>-1.262503</td>\n","      <td>0.510169</td>\n","      <td>-0.805445</td>\n","      <td>-0.147443</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.295015</td>\n","      <td>0.744326</td>\n","      <td>1.352244</td>\n","      <td>-0.279081</td>\n","      <td>-0.012839</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>284802</th>\n","      <td>-3.886611</td>\n","      <td>1.742559</td>\n","      <td>-0.692530</td>\n","      <td>2.344999</td>\n","      <td>0.290602</td>\n","    </tr>\n","    <tr>\n","      <th>284803</th>\n","      <td>0.629040</td>\n","      <td>0.532299</td>\n","      <td>1.220526</td>\n","      <td>-0.030251</td>\n","      <td>0.291625</td>\n","    </tr>\n","    <tr>\n","      <th>284804</th>\n","      <td>1.905833</td>\n","      <td>0.393630</td>\n","      <td>-0.184571</td>\n","      <td>0.369114</td>\n","      <td>0.315913</td>\n","    </tr>\n","    <tr>\n","      <th>284805</th>\n","      <td>-0.273836</td>\n","      <td>0.356887</td>\n","      <td>-1.047032</td>\n","      <td>0.600385</td>\n","      <td>0.361112</td>\n","    </tr>\n","    <tr>\n","      <th>284806</th>\n","      <td>-0.009089</td>\n","      <td>0.442532</td>\n","      <td>-0.188986</td>\n","      <td>-0.777521</td>\n","      <td>0.355411</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>284807 rows Ã— 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-423c9607-b7fb-423f-afc0-943709230473')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-423c9607-b7fb-423f-afc0-943709230473 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-423c9607-b7fb-423f-afc0-943709230473');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["norm_credit_card_data=normalize(credit_card_data)\n","norm_df=pd.DataFrame(norm_credit_card_data)\n","norm_credit_card_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YGSKqsSMANFB","executionInfo":{"status":"ok","timestamp":1670386130073,"user_tz":-330,"elapsed":46,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"3ff25068-4885-43a2-d6ca-6fbc3bc37230"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.29982858,  0.32239738, -0.87859522,  0.18430947, -0.01622394],\n","       [ 0.0983747 , -0.41866636,  0.8016738 , -0.18817589, -0.37006736],\n","       [-0.2411146 , -0.72576832,  0.34370109,  0.53185773,  0.11883187],\n","       ...,\n","       [ 0.97409786,  0.16014071, -0.06802489,  0.11609187,  0.08592787],\n","       [-0.2887891 ,  0.29958204, -0.79622426,  0.38962149,  0.20266592],\n","       [-0.01424033,  0.55185171, -0.21350013, -0.74957907,  0.29632046]])"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","clf = DecisionTreeClassifier()\n","print(\"DecisionTreeClassifier\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_z6e8Aarx0A6","executionInfo":{"status":"ok","timestamp":1670386130074,"user_tz":-330,"elapsed":39,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"918665d4-bb0c-44a1-938f-44656f1642f2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["DecisionTreeClassifier\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"uaGdsyCIUzD_"}},{"cell_type":"markdown","source":["RandomForestClassifier"],"metadata":{"id":"gUT4sGsfU2cQ"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","rf = RandomForestClassifier(max_depth = 4)\n","rf.fit(X_train, Y_train)\n","rf_yhat = rf.predict(X_test)"],"metadata":{"id":"gzzt3hMCTcU_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('Accuracy score of the Random Forest model is {}'.format(accuracy_score(Y_test, rf_yhat)))\n","print('F1 score of the Random Forest model is {}'.format(f1_score(Y_test, rf_yhat)))\n","print('Precision : {}'.format(precision_score(Y_test,rf_yhat)))\n","print('Recall : {}'.format(recall_score(Y_test,rf_yhat)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xO5xl9n4UZaA","executionInfo":{"status":"ok","timestamp":1670386130076,"user_tz":-330,"elapsed":35,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"8e599400-121a-4925-8486-735fd43fe1f7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score of the Random Forest model is 0.9187817258883249\n","F1 score of the Random Forest model is 0.9130434782608695\n","Precision : 0.9767441860465116\n","Recall : 0.8571428571428571\n"]}]},{"cell_type":"markdown","source":["Support Vector Machines"],"metadata":{"id":"o9yPnv39U4qR"}},{"cell_type":"code","source":["from sklearn.svm import SVC\n","svm = SVC()\n","svm.fit(X_train, Y_train)\n","svm_yhat = svm.predict(X_test)"],"metadata":{"id":"W89cE-msUw8a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('Accuracy score of the Support Vector Machines model is {}'.format(accuracy_score(Y_test, svm_yhat)))\n","print('F1 score of the Support Vector Machines model is {}'.format(f1_score(Y_test, svm_yhat)))\n","print('Precision : {}'.format(precision_score(Y_test,svm_yhat)))\n","print('Recall : {}'.format(recall_score(Y_test,svm_yhat)))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aiM7AdDhWGsY","executionInfo":{"status":"ok","timestamp":1670386130078,"user_tz":-330,"elapsed":30,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"53eb9607-02b9-47d9-c8a7-e462ad1b7841"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score of the Support Vector Machines model is 0.5126903553299492\n","F1 score of the Support Vector Machines model is 0.5199999999999999\n","Precision : 0.5098039215686274\n","Recall : 0.5306122448979592\n"]}]},{"cell_type":"code","source":["from sklearn import tree\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn import datasets\n","from sklearn import metrics\n"],"metadata":{"id":"lmCM3sU_U87M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clf=tree.DecisionTreeClassifier(criterion = \"gini\", splitter = 'random', max_leaf_nodes = 10, min_samples_leaf = 5, max_depth= 5)"],"metadata":{"id":"3wA5rP3srVUb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clf.fit(X_train,Y_train)\n","y_predict=clf.predict(X_test)"],"metadata":{"id":"uhrSANkWrVWD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","from sklearn.metrics import precision_score\n","from sklearn.metrics import recall_score\n","from sklearn.metrics import f1_score\n","p1=accuracy_score(Y_test,y_predict)\n","p2=precision_score(Y_test,y_predict,average=\"macro\")\n","p3=(recall_score(Y_test,y_predict,average=\"macro\"))\n","p4=f1_score(Y_test,y_predict,average=\"macro\")\n","print('Accuracy:{}'.format(accuracy_score(Y_test,y_predict)))\n","print('Precision:{}'.format(precision_score(Y_test,y_predict,average=\"macro\")))\n","print('Recall:{}'.format(recall_score(Y_test,y_predict,average=\"macro\")))\n","print('f1:{}'.format(f1_score(Y_test,y_predict,average=\"macro\")))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1EaLtg0kr708","executionInfo":{"status":"ok","timestamp":1670386130082,"user_tz":-330,"elapsed":28,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"c2bbed73-0235-41e0-a468-d57fb6ab2bc8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:0.8934010152284264\n","Precision:0.8985370950888192\n","Recall:0.8931148216862503\n","f1:0.8930040087934825\n"]}]},{"cell_type":"code","source":["tree.plot_tree(clf)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":578},"id":"crCTgL7LsQr6","executionInfo":{"status":"ok","timestamp":1670386132702,"user_tz":-330,"elapsed":2644,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"b0415253-22e1-40ee-8917-714729fdc057"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Text(0.43333333333333335, 0.9166666666666666, 'X[3] <= -1.196\\ngini = 0.5\\nsamples = 787\\nvalue = [393, 394]'),\n"," Text(0.26666666666666666, 0.75, 'X[10] <= -1.141\\ngini = 0.335\\nsamples = 423\\nvalue = [90, 333]'),\n"," Text(0.13333333333333333, 0.5833333333333334, 'X[5] <= 1.962\\ngini = 0.043\\nsamples = 322\\nvalue = [7, 315]'),\n"," Text(0.06666666666666667, 0.4166666666666667, 'gini = 0.026\\nsamples = 304\\nvalue = [4, 300]'),\n"," Text(0.2, 0.4166666666666667, 'gini = 0.278\\nsamples = 18\\nvalue = [3, 15]'),\n"," Text(0.4, 0.5833333333333334, 'X[4] <= 1.373\\ngini = 0.293\\nsamples = 101\\nvalue = [83, 18]'),\n"," Text(0.3333333333333333, 0.4166666666666667, 'gini = 0.091\\nsamples = 84\\nvalue = [80, 4]'),\n"," Text(0.4666666666666667, 0.4166666666666667, 'gini = 0.291\\nsamples = 17\\nvalue = [3, 14]'),\n"," Text(0.6, 0.75, 'X[14] <= -4.071\\ngini = 0.279\\nsamples = 364\\nvalue = [303, 61]'),\n"," Text(0.5333333333333333, 0.5833333333333334, 'gini = 0.0\\nsamples = 11\\nvalue = [0, 11]'),\n"," Text(0.6666666666666666, 0.5833333333333334, 'X[14] <= -3.126\\ngini = 0.243\\nsamples = 353\\nvalue = [303, 50]'),\n"," Text(0.6, 0.4166666666666667, 'gini = 0.0\\nsamples = 5\\nvalue = [0, 5]'),\n"," Text(0.7333333333333333, 0.4166666666666667, 'X[7] <= 1.046\\ngini = 0.225\\nsamples = 348\\nvalue = [303, 45]'),\n"," Text(0.6, 0.25, 'X[14] <= -0.833\\ngini = 0.179\\nsamples = 311\\nvalue = [280, 31]'),\n"," Text(0.5333333333333333, 0.08333333333333333, 'gini = 0.413\\nsamples = 55\\nvalue = [39, 16]'),\n"," Text(0.6666666666666666, 0.08333333333333333, 'gini = 0.11\\nsamples = 256\\nvalue = [241, 15]'),\n"," Text(0.8666666666666667, 0.25, 'X[4] <= 2.61\\ngini = 0.47\\nsamples = 37\\nvalue = [23, 14]'),\n"," Text(0.8, 0.08333333333333333, 'gini = 0.417\\nsamples = 27\\nvalue = [19, 8]'),\n"," Text(0.9333333333333333, 0.08333333333333333, 'gini = 0.48\\nsamples = 10\\nvalue = [4, 6]')]"]},"metadata":{},"execution_count":131},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","sc=StandardScaler()\n","x_train=sc.fit_transform(x_train)\n","x_test=sc.transform(x_test)"],"metadata":{"id":"hhxZ6b1fuTtB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB\n","gnb=GaussianNB()\n","gnb.fit(X_train,Y_train)\n","y_pred=gnb.predict(X_test)"],"metadata":{"id":"ez8ZT_xhwM0h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","from sklearn.metrics import precision_score\n","from sklearn.metrics import recall_score\n","from sklearn.metrics import f1_score\n","print('Accuracy:{}'.format(accuracy_score(Y_test,y_pred)))\n","print('Precision:{}'.format(precision_score(Y_test,y_pred,average=\"macro\")))\n","print('Recall:{}'.format(recall_score(Y_test,y_pred,average=\"macro\")))\n","print('f1:{}'.format(f1_score(Y_test,y_pred,average=\"macro\")))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5FUORO8QwU3i","executionInfo":{"status":"ok","timestamp":1670386132706,"user_tz":-330,"elapsed":33,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"6c46ba78-6394-469a-f1c7-ce5a6a2f1197"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:0.8730964467005076\n","Precision:0.8949726775956284\n","Recall:0.8725005153576582\n","f1:0.8711845787670338\n"]}]},{"cell_type":"code","source":["from sklearn.decomposition import PCA\n","pca=PCA(n_components=2)\n","x_train_pca=pca.fit_transform(X_train)\n","x_test_pca=pca.transform(X_test)"],"metadata":{"id":"tuxvTLqFu4FH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gnbpca=GaussianNB()\n","gnbpca.fit(x_train_pca,Y_train)\n","y_pred_pca=gnbpca.predict(x_test_pca)"],"metadata":{"id":"LS6ErPi5vCzF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","from sklearn.metrics import precision_score\n","from sklearn.metrics import recall_score\n","from sklearn.metrics import f1_score\n","print('Accuracy:{}'.format(accuracy_score(Y_test,y_pred_pca)))\n","print('Precision:{}'.format(precision_score(Y_test,y_pred_pca,average=\"macro\")))\n","print('Recall:{}'.format(recall_score(Y_test,y_pred_pca,average=\"macro\")))\n","print('f1:{}'.format(f1_score(Y_test,y_pred_pca,average=\"macro\")))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BbnK2_7OvMhL","executionInfo":{"status":"ok","timestamp":1670386132709,"user_tz":-330,"elapsed":31,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"3d44fb51-4791-4528-c797-1552c21c25a3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:0.5532994923857868\n","Precision:0.5533643892339545\n","Recall:0.553133374561946\n","f1:0.5527347781217751\n"]}]},{"cell_type":"code","source":["from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA\n","lda = LDA(n_components=1)\n","x_train_lda= lda.fit_transform(X_train, Y_train)\n","x_test_lda= lda.transform(X_test)"],"metadata":{"id":"V1_eCreQvfat"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gnblda=GaussianNB()\n","gnblda.fit(x_train_lda,Y_train)\n","y_pred_lda=gnblda.predict(x_test_lda)"],"metadata":{"id":"tnCj8Q1evqSq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","from sklearn.metrics import precision_score\n","from sklearn.metrics import recall_score\n","from sklearn.metrics import f1_score\n","print('Accuracy:{}'.format(accuracy_score(Y_test,y_pred_lda)))\n","print('Precision:{}'.format(precision_score(Y_test,y_pred_lda,average=\"macro\")))\n","print('Recall:{}'.format(recall_score(Y_test,y_pred_lda,average=\"macro\")))\n","print('f1:{}'.format(f1_score(Y_test,y_pred_lda,average=\"macro\")))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UzittJskv8gK","executionInfo":{"status":"ok","timestamp":1670386132713,"user_tz":-330,"elapsed":31,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"051b9118-b33a-4656-d07f-947d3c072d34"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:0.9187817258883249\n","Precision:0.9253090299601927\n","Recall:0.9184704184704184\n","f1:0.9184265010351966\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","y= [0.6885245901639344,0.5,0.3684210526315789,0.4242424242424242]\n","y1=[0.7540983606557377,0.6666666666666666,0.42105263157894735,0.5161290322580646]\n","y2=[0.7540983606557377,0.7,0.3684210526315789,0.48275862068965514]\n","x=[\"accuracy\",\"precisiion\",\"recall\",\"fscore\"]\n","plt.plot(x, y, label = \"original data\",marker=\"*\")\n","plt.plot(x, y1, label = \"lda\",marker=\"+\")\n","plt.plot(x, y2, label = \"pca\",marker=\".\")\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"n8fUmLwzwrG7","executionInfo":{"status":"ok","timestamp":1670386259515,"user_tz":-330,"elapsed":1384,"user":{"displayName":"Prabhat Kumar","userId":"15782209673783878735"}},"outputId":"b690d67d-3a0d-4b1f-c738-84b8f86dfcac"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}